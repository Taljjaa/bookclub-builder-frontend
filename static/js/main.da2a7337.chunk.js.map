{"version":3,"sources":["services/api.js","actions/bookclub.js","components/BookClubCard.js","components/Home.js","actions/auth.js","components/Login.js","components/SignUp.js","actions/poll.js","actions/modal.js","components/PollVote.js","actions/book.js","components/PollShow.js","components/AdminOptions.js","components/MemberOptions.js","components/BookModal.js","components/BookClubShow.js","components/CreatePoll.js","components/EditBookClub.js","components/NavBar.js","components/CreateBookClub.js","components/MyBookClubs.js","components/PollOptionShow.js","components/PollOptions.js","components/MainContainer.js","App.js","serviceWorker.js","reducers/index.js","reducers/auth.js","reducers/bookclub.js","reducers/poll.js","reducers/book.js","reducers/modal.js","store.js","index.js","logo.png"],"names":["API_ROOT","headers","Accepts","Authorization","localStorage","getItem","api","login","data","fetch","method","body","JSON","stringify","then","res","json","getCurrentUser","signup","username","password","profile_picture","picture","url","useState","response","setResponse","fetched","setFetched","error","setError","retry","setRetry","useEffect","a","async","status","Error","responseData","fetchFromServer","forceRetry","CURRENT_BOOKCLUB","bookclub","type","UPDATE_USER","users","BookClubCard","props","id","name","description","dispatch","useDispatch","history","useHistory","classes","makeStyles","card","minWidth","maxWidth","margin","media","height","width","objectFit","action","useStyles","Card","className","CardActionArea","onClick","currentBookclub","push","CardMedia","component","alt","image","title","CardContent","Typography","variant","color","length","Home","bookclubs","token","root","display","flexWrap","justifyContent","alignContent","src","logo","map","key","SIGN_IN","user","Login","setUsername","setPassword","Grid","container","direction","justify","alignItems","onSubmit","e","preventDefault","console","log","signIn","setItem","jwt","item","xs","TextField","required","label","value","onChange","target","spacing","style","marginTop","Button","Link","href","SignUp","setPicture","config","bucketName","region","accessKeyId","process","secretAccessKey","theme","input","marginBottom","accept","multiple","S3FileUpload","uploadFile","files","location","catch","alert","htmlFor","startIcon","CURRENT_POLL","poll","TOGGLE_MODAL_STATUS","open","PollVote","option","google_book_id","votes","bookInfo","extendedIcon","marginRight","Fab","size","aria-label","book","toggleModalStatus","volumeInfo","increasedVote","currentPoll","PollShow","border","borderRadius","useSelector","state","poll_options","AdminOptions","btn","textDecoration","to","active","MemberOptions","currentUser","auth","filter","index","findIndex","splice","bookclub_id","user_id","updateUser","BookModal","paper","position","top","left","overflow","backgroundColor","palette","background","boxShadow","shadows","padding","React","transform","modalStyle","modal","Modal","aria-labelledby","aria-describedby","onClose","content","BookClubShow","match","bookclubUsers","setBookclubUsers","flexDirection","marginLeft","params","finally","bookclub_users","is_admin","AvatarGroup","Tooltip","Avatar","CreatePoll","setTitle","Box","event","autoComplete","EditBookClub","bookclubId","setName","setDescription","maxHeight","NavBar","links","AppBar","Toolbar","CreateBookClub","currentUserId","MyBookClubs","mybookclubs","PollOptionShow","poll_id","notify","imageLinks","smallThumbnail","gutterBottom","PollOptions","options","setOptions","select","setSelect","search","setSearch","bookTitle","toast","success","items","InputProps","startAdornment","InputAdornment","FormControl","Select","labelId","autoWidth","MenuItem","autoClose","transition","Slide","searchId","MainContainer","exact","path","render","routerProps","createMuiTheme","typography","fontFamily","join","App","ThemeProvider","basename","Boolean","window","hostname","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.da2a7337.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst API_ROOT = `https://bookclub-builder-server.herokuapp.com/api/v1`;\nconst token = localStorage.getItem('token');\n\nconst headers = {\n   'Content-Type': 'application/json',\n   Accepts: 'application/json',\n   Authorization: token,\n};\n\nconst useNetworkResource = url => {\n   const [response, setResponse] = useState();\n   const [fetched, setFetched] = useState(false);\n   const [error, setError] = useState();\n   const [retry, setRetry] = useState(false);\n\n   useEffect(() => {\n      const fetchFromServer = async () => {\n         try {\n            const response = await fetch(url);\n            // show off our pretty loading experience because our backend is too blazing fast to need a loader\n            // await new Promise(resolve => setTimeout(() => resolve(), 1000));\n\n            if (response.status !== 200) {\n               throw new Error('bad');\n            }\n\n            const responseData = await response.json();\n\n            setResponse(responseData);\n         } catch (error) {\n            setError(error);\n         } finally {\n            setFetched(true);\n         }\n      };\n\n      // useEffect cannot take an async function\n      fetchFromServer();\n\n      return () => {\n         // called before next useEffect\n         setFetched(false);\n         setError();\n      };\n   }, [url, retry]);\n\n   return [response, fetched, { error, forceRetry: () => setRetry(!retry) }];\n};\n\nconst login = data => {\n   return fetch(`${API_ROOT}/login`, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data),\n   }).then(res => res.json());\n};\n\nconst signup = data => {\n   return fetch(`${API_ROOT}/users`, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify({\n         username: data.username,\n         password: data.password,\n         profile_picture: data.picture,\n      }),\n   }).then(res => res.json());\n};\n\nconst getCurrentUser = () => {\n   return fetch(`${API_ROOT}/current_user`, {\n      headers,\n   }).then(res => {\n      return res.json();\n   });\n};\n\nexport const api = {\n   auth: {\n      login,\n      getCurrentUser,\n      signup,\n   },\n   useNetworkResource,\n};\n","export const CURRENT_BOOKCLUB = bookclub => {\n   return {\n      type: 'CURRENT_BOOKCLUB',\n      bookclub,\n   };\n};\n\nexport const UPDATE_USER = users => {\n   return {\n      type: 'UPDATE_USER',\n      users,\n   };\n};\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { useHistory } from 'react-router-dom';\nimport { CURRENT_BOOKCLUB as currentBookclub } from '../actions/bookclub';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst BookClubCard = props => {\n   const { id, name, picture, description, users } = props.bookclub;\n   const dispatch = useDispatch();\n   const history = useHistory();\n\n   const useStyles = makeStyles({\n      card: {\n         minWidth: '30%',\n         maxWidth: '30%',\n         margin: 10,\n         '&:hover': {},\n      },\n      media: {\n         height: 345,\n         width: '100%',\n         objectFit: 'cover',\n      },\n      action: {\n         '&:hover': {},\n      },\n   });\n\n   const classes = useStyles();\n\n   const handleClick = () => {\n      dispatch(currentBookclub(props.bookclub));\n      history.push(`/bookclubs/${id}`);\n   };\n\n   return (\n      <Card className={classes.card}>\n         <CardActionArea onClick={handleClick} className={classes.action}>\n            <CardMedia\n               className={classes.media}\n               component=\"img\"\n               alt={`${name} bookclub`}\n               image={picture}\n               title={name}\n            />\n            <CardContent>\n               <Typography variant=\"h5\" component=\"h2\">\n                  {name}\n               </Typography>\n               <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n                  {description}\n               </Typography>\n               <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  {`${users.length} Member(s)`}\n               </Typography>\n            </CardContent>\n         </CardActionArea>\n      </Card>\n   );\n};\n\nexport default BookClubCard;\n","import React from 'react';\nimport { api } from '../services/api';\nimport BookClubCard from './BookClubCard';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport logo from '../logo.png';\n\nconst Home = () => {\n   const [bookclubs, fetched] = api.useNetworkResource(\n      `https://bookclub-builder-server.herokuapp.com/api/v1/bookclubs`,\n   );\n\n   const history = useHistory();\n\n   const token = localStorage.getItem('token');\n\n   const useStyles = makeStyles({\n      root: {\n         display: 'flex',\n         flexWrap: 'wrap',\n         justifyContent: 'center',\n         alignContent: 'center',\n         height: '100%',\n      },\n   });\n\n   const classes = useStyles();\n\n   if (!token) {\n      history.push('/login');\n   }\n\n   if (!fetched) {\n      return null;\n   }\n\n   return (\n      <div className={classes.root}>\n         <img src={logo} alt=\"logo\" />\n         <div className={classes.root}>\n            {bookclubs.map(bookclub => (\n               <BookClubCard key={bookclub.id} bookclub={bookclub} />\n            ))}\n         </div>\n      </div>\n   );\n};\n\nexport default Home;\n","export const SIGN_IN = user => {\n   return {\n      type: 'SIGN_IN',\n      user,\n   };\n};\n\nexport const SIGN_OUT = () => {\n   return {\n      type: 'SIGN_OUT',\n   };\n};\n","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { api } from '../services/api';\nimport { SIGN_IN as signIn } from '../actions/auth';\nimport { useDispatch } from 'react-redux';\n\nconst Login = props => {\n   const [username, setUsername] = useState('');\n   const [password, setPassword] = useState('');\n   const dispatch = useDispatch();\n\n   const handleUsernameChange = e => {\n      setUsername(e.target.value);\n   };\n\n   const handlePasswordChange = e => {\n      setPassword(e.target.value);\n   };\n\n   const handleSubmit = e => {\n      e.preventDefault();\n      api.auth.login({ username, password }).then(response => {\n         if (response.error) {\n            console.log(response.error);\n         } else {\n            dispatch(signIn(response));\n            localStorage.setItem('token', response.jwt);\n            props.history.push('/');\n         }\n      });\n   };\n\n   return (\n      <div>\n         <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n         >\n            <h1>Login</h1>\n            <form onSubmit={handleSubmit}>\n               <Grid item xs={12}>\n                  <TextField\n                     required\n                     id=\"username\"\n                     label=\"Username\"\n                     value={username}\n                     onChange={handleUsernameChange}\n                     variant=\"filled\"\n                  />\n               </Grid>\n               <Grid item xs={12}>\n                  <TextField\n                     required\n                     id=\"password\"\n                     label=\"Password\"\n                     type=\"password\"\n                     value={password}\n                     onChange={handlePasswordChange}\n                     variant=\"filled\"\n                  />\n               </Grid>\n               <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\n                  <Grid item xs={7} style={{ marginTop: 5 }}>\n                     <Button variant=\"outlined\" type=\"submit\">\n                        Submit\n                     </Button>\n                  </Grid>\n                  <Grid item xs={5}>\n                     <Typography>\n                        <Link href=\"/signup\">Sign Up</Link>\n                     </Typography>\n                  </Grid>\n               </Grid>\n            </form>\n         </Grid>\n      </div>\n   );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { api } from '../services/api';\nimport { SIGN_IN as signIn } from '../actions/auth';\nimport { useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport S3FileUpload from 'react-s3';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst SignUp = props => {\n   const [username, setUsername] = useState('');\n   const [password, setPassword] = useState('');\n   const [picture, setPicture] = useState('https://i.imgur.com/VfFU5d8.jpg');\n\n   const dispatch = useDispatch();\n\n   const config = {\n      bucketName: 'bookclub-photos',\n      region: 'us-west-2',\n      accessKeyId: process.env.REACT_APP_BOOKCLUB_ACCESS_KEY_ID,\n      secretAccessKey: process.env.REACT_APP_BOOKCLUB_SECRET_ACCESS_KEY,\n   };\n\n   const useStyles = makeStyles(theme => ({\n      root: {\n         '& > *': {\n            margin: theme.spacing(1),\n         },\n      },\n      input: {\n         display: 'none',\n         margin: '5px',\n      },\n   }));\n\n   const classes = useStyles();\n\n   const handleUsernameChange = e => {\n      setUsername(e.target.value);\n   };\n\n   const handlePasswordChange = e => {\n      setPassword(e.target.value);\n   };\n\n   const handleSubmit = e => {\n      e.preventDefault();\n      api.auth.signup({ username, password, picture }).then(response => {\n         if (response.error) {\n            console.log(response.error);\n         } else {\n            dispatch(signIn(response));\n            localStorage.setItem('token', response.jwt);\n            props.history.push('/');\n         }\n      });\n   };\n\n   const upload = e => {\n      S3FileUpload.uploadFile(e.target.files[0], config)\n         .then(data => {\n            setPicture(data.location);\n         })\n         .catch(error => {\n            alert(error);\n         });\n   };\n\n   return (\n      <Grid\n         container\n         direction=\"column\"\n         justify=\"center\"\n         alignItems=\"center\"\n         spacing={2}\n      >\n         <h1>Sign Up</h1>\n         <form onSubmit={handleSubmit}>\n            <Grid item xs={12}>\n               <TextField\n                  required\n                  id=\"username\"\n                  label=\"Username\"\n                  value={username}\n                  onChange={handleUsernameChange}\n                  variant=\"filled\"\n               />\n            </Grid>\n            <Grid item xs={12}>\n               <TextField\n                  required\n                  type=\"password\"\n                  id=\"password\"\n                  label=\"Password\"\n                  value={password}\n                  onChange={handlePasswordChange}\n                  variant=\"filled\"\n               />\n            </Grid>\n            <Grid item xs={12} style={{ marginTop: 10, marginBottom: 10 }}>\n               <input\n                  className={classes.input}\n                  accept=\"image/*\"\n                  id=\"contained-button-file\"\n                  multiple\n                  type=\"file\"\n                  onChange={upload}\n               />\n               <label htmlFor=\"contained-button-file\">\n                  <Button\n                     variant=\"contained\"\n                     color=\"primary\"\n                     component=\"span\"\n                     startIcon={<CloudUploadIcon />}\n                  >\n                     Upload\n                  </Button>\n               </label>\n            </Grid>\n            <Grid item xs={12}>\n               <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                  Submit\n               </Button>\n            </Grid>\n         </form>\n      </Grid>\n   );\n};\n\nexport default SignUp;\n","export const CREATE_POLL = poll => {\n   return {\n      type: 'CREATE_POLL',\n      poll,\n   };\n};\n\nexport const CREATE_OPTION = option => {\n   return {\n      type: 'CREATE_OPTION',\n      option,\n   };\n};\n\nexport const CURRENT_POLL = poll => {\n   return {\n      type: 'CURRENT_POLL',\n      poll,\n   };\n};\n\nexport const ARCHIVE_POLL = () => {\n   return {\n      type: 'ARCHIVE_POLL',\n   };\n};\n","export const TOGGLE_MODAL_STATUS = open => {\n   return {\n      type: 'TOGGLE_MODAL_STATUS',\n      open,\n   };\n};\n","import React from 'react';\nimport { api } from '../services/api';\nimport { useDispatch } from 'react-redux';\nimport { CURRENT_BOOK as currentBook } from '../actions/book';\nimport { TOGGLE_MODAL_STATUS as toggleModalStatus } from '../actions/modal';\nimport { CURRENT_POLL as currentPoll } from '../actions/poll';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport Button from '@material-ui/core/Button';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport Grid from '@material-ui/core/Grid';\n\nconst PollVote = ({ option: { id, google_book_id, votes } }) => {\n   const [bookInfo, fetched] = api.useNetworkResource(\n      `https://www.googleapis.com/books/v1/volumes/${google_book_id}`,\n   );\n   const dispatch = useDispatch();\n\n   const useStyles = makeStyles(theme => ({\n      margin: {\n         margin: theme.spacing(1),\n      },\n      extendedIcon: {\n         marginRight: theme.spacing(1),\n      },\n   }));\n\n   const classes = useStyles();\n\n   const handleBookState = () => {\n      dispatch(currentBook(bookInfo));\n      dispatch(toggleModalStatus(true));\n   };\n\n   const handleVoteClick = () => {\n      let increasedVote = votes + 1;\n      fetch(`https://bookclub-builder-server.herokuapp.com/api/v1/poll_options/${id}`, {\n         method: 'PATCH',\n         headers: {\n            'Content-Type': 'application/json',\n            Accepts: 'application/json',\n         },\n         body: JSON.stringify({\n            increasedVote,\n         }),\n      })\n         .then(response => response.json())\n         .then(data => {\n            dispatch(currentPoll(data));\n         });\n   };\n\n   if (!fetched) {\n      return null;\n   }\n\n   return (\n      <Grid\n         container\n         direction=\"row\"\n         justify=\"center\"\n         alignItems=\"center\"\n         spacing={3}\n      >\n         <Grid item>\n            <Fab\n               variant=\"extended\"\n               size=\"small\"\n               aria-label=\"add\"\n               className={classes.margin}\n               onClick={handleBookState}\n            >\n               <NavigationIcon className={classes.extendedIcon} />\n               {bookInfo.volumeInfo.title}\n            </Fab>\n         </Grid>\n         <Grid item>\n            <p>Votes: {votes}</p>\n         </Grid>\n         <Grid item>\n            <Button\n               onClick={handleVoteClick}\n               variant=\"contained\"\n               color=\"primary\"\n            >\n               Vote\n            </Button>\n         </Grid>\n      </Grid>\n   );\n};\n\nexport default PollVote;\n","export const CURRENT_BOOK = book => {\n   return {\n      type: 'CURRENT_BOOK',\n      book,\n   };\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PollVote from './PollVote';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst PollShow = () => {\n   const useStyles = makeStyles({\n      poll: {\n         border: '1px solid gray',\n         borderRadius: 5,\n         width: '55%',\n      },\n   });\n\n   const classes = useStyles();\n   const poll = useSelector(state => state.poll.poll);\n\n   const displayPollOptions = () => {\n      return poll.poll_options.map(option => {\n         return <PollVote key={option.id} option={option} />;\n      });\n   };\n\n   return (\n      <Grid\n         container\n         direction=\"column\"\n         justify=\"center\"\n         alignItems=\"center\"\n         className={classes.poll}\n      >\n         <h1>{poll.name}</h1>\n         {poll.poll_options.length > 0 && <>{displayPollOptions()}</>}\n      </Grid>\n   );\n};\n\nexport default PollShow;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ARCHIVE_POLL as archivePoll } from '../actions/poll';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst AdminOptions = () => {\n   const id = useSelector(state => state.bookclub.bookclub.id);\n   const poll = useSelector(state => state.poll.poll);\n   const dispatch = useDispatch();\n\n   const useStyles = makeStyles({\n      btn: {\n         margin: 5,\n         color: 'white',\n         textDecoration: 'none',\n      },\n   });\n\n   const classes = useStyles();\n\n   const handleClick = () => {\n      fetch(\n         `https://bookclub-builder-server.herokuapp.com/api/v1/polls/${poll.id}`,\n         {\n            method: 'PATCH',\n            headers: {\n               'Content-Type': 'application/json',\n               Accepts: 'application/json',\n            },\n            body: JSON.stringify({\n               active: false,\n            }),\n         },\n      )\n         .then(response => response.json())\n         .then(data => {\n            dispatch(archivePoll(data));\n         });\n   };\n\n   return (\n      <div>\n         {!poll || poll.poll_options.length < 1 ? (\n            <Link to={`/bookclubs/${id}/poll`} className={classes.btn}>\n               <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.btn}\n               >\n                  Create Poll\n               </Button>\n            </Link>\n         ) : (\n            <Button\n               className={classes.btn}\n               variant=\"contained\"\n               color=\"primary\"\n               onClick={handleClick}\n            >\n               Archive Poll\n            </Button>\n         )}\n\n         <Link to={`/bookclubs/${id}/edit`} className={classes.btn}>\n            <Button variant=\"contained\" color=\"primary\" className={classes.btn}>\n               Edit Bookclub\n            </Button>\n         </Link>\n      </div>\n   );\n};\n\nexport default AdminOptions;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UPDATE_USER as updateUser } from '../actions/bookclub';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst MemberOptions = () => {\n   const bookclub = useSelector(state => state.bookclub.bookclub);\n   const currentUser = useSelector(state => state.auth.user);\n   const dispatch = useDispatch();\n\n   const useStyles = makeStyles({\n      btn: {\n         margin: 5,\n      },\n   });\n\n   const classes = useStyles();\n\n   const isMember = () => {\n      let temp = bookclub.users.filter(user => {\n         return user.id === currentUser.id;\n      });\n      if (temp.length > 0) {\n         return true;\n      }\n      return false;\n   };\n\n   const leaveBookClub = () => {\n      let index = bookclub.users.findIndex(user => user.id === currentUser.id);\n      bookclub.users.splice(index, 1);\n      fetch(\n         `https://bookclub-builder-server.herokuapp.com/api/v1/bookclub_users/id`,\n         {\n            method: 'DELETE',\n            headers: {\n               'Content-Type': 'application/json',\n               Accepts: 'application/json',\n            },\n            body: JSON.stringify({\n               bookclub_id: bookclub.id,\n               user_id: currentUser.id,\n            }),\n         },\n      ).then(response => {\n         if (!response.error) {\n            dispatch(updateUser(bookclub.users));\n         }\n      });\n   };\n\n   const joinBookClub = () => {\n      bookclub.users.push(currentUser);\n      dispatch(updateUser(bookclub.users));\n      fetch(\n         `https://bookclub-builder-server.herokuapp.com/api/v1/bookclub_users`,\n         {\n            method: 'POST',\n            headers: {\n               'Content-Type': 'application/json',\n               Accepts: 'application/json',\n            },\n            body: JSON.stringify({\n               bookclub_id: bookclub.id,\n               user_id: currentUser.id,\n            }),\n         },\n      )\n         .then(response => response.json())\n         .then(data => {});\n   };\n\n   return (\n      <div>\n         {isMember() ? (\n            <Button\n               variant=\"contained\"\n               color=\"primary\"\n               onClick={leaveBookClub}\n               className={classes.btn}\n            >\n               Leave Bookclub\n            </Button>\n         ) : (\n            <Button\n               variant=\"contained\"\n               color=\"primary\"\n               onClick={joinBookClub}\n               className={classes.btn}\n            >\n               Join Bookclub\n            </Button>\n         )}\n      </div>\n   );\n};\n\nexport default MemberOptions;\n","import React from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TOGGLE_MODAL_STATUS as toggleModalStatus } from '../actions/modal';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Interweave from 'interweave';\n\nconst BookModal = () => {\n   function getModalStyle() {\n      return {\n         top: `50%`,\n         left: `50%`,\n         transform: `translate(-50%, -50%)`,\n      };\n   }\n\n   const useStyles = makeStyles(theme => ({\n      paper: {\n         position: 'absolute',\n         top: '10%',\n         left: '10%',\n         overflow: 'scroll',\n         height: '100%',\n         display: 'block',\n         width: 400,\n         backgroundColor: theme.palette.background.paper,\n         border: '2px solid #000',\n         boxShadow: theme.shadows[5],\n         padding: theme.spacing(2, 4, 3),\n      },\n   }));\n\n   const classes = useStyles();\n   const [modalStyle] = React.useState(getModalStyle);\n   const dispatch = useDispatch();\n   const book = useSelector(state => state.book.book);\n   const open = useSelector(state => state.modal.open);\n\n   const handleClose = () => {\n      dispatch(toggleModalStatus(false));\n   };\n\n   return (\n      <div>\n         <Modal\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n            onClose={handleClose}\n            open={open}\n         >\n            <div style={modalStyle} className={classes.paper}>\n               <h2 id=\"simple-modal-title\">\n                  {book ? book.volumeInfo.title : null}\n               </h2>\n               <div id=\"simple-modal-description\">\n                  {book ? (\n                     <Interweave content={book.volumeInfo.description} />\n                  ) : null}\n               </div>\n            </div>\n         </Modal>\n      </div>\n   );\n};\n\nexport default BookModal;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CURRENT_POLL as currentPoll } from '../actions/poll';\nimport PollShow from './PollShow';\nimport AdminOptions from './AdminOptions';\nimport MemberOptions from './MemberOptions';\nimport BookModal from './BookModal';\nimport Avatar from '@material-ui/core/Avatar';\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst BookClubShow = ({ props, match }) => {\n   const bookclub = useSelector(state => state.bookclub.bookclub);\n   const users = useSelector(state => state.bookclub.bookclub.users);\n   const [bookclubUsers, setBookclubUsers] = useState('');\n   const [fetched, setFetched] = useState(false);\n   const dispatch = useDispatch();\n   const poll = useSelector(state => state.poll.poll);\n   const currentUser = useSelector(state => state.auth.user);\n   const history = useHistory();\n   const token = localStorage.getItem('token');\n\n   const useStyles = makeStyles({\n      root: {\n         display: 'flex',\n         flexDirection: 'column',\n         justifyContent: 'center',\n         alignItems: 'center',\n         height: '100%',\n         marginLeft: 25,\n         marginRight: 25,\n      },\n      image: {\n         height: '40%',\n         width: '40%',\n      },\n   });\n\n   const classes = useStyles();\n\n   useEffect(() => {\n      fetch(\n         `https://bookclub-builder-server.herokuapp.com/api/v1/bookclubs/${match.params.id}`,\n      )\n         .then(response => response.json())\n         .then(data => {\n            setBookclubUsers(data);\n            dispatch(currentPoll(data.poll[0]));\n         })\n         .finally(() => {\n            setFetched(true);\n         });\n   }, [match.params.id]);\n\n   if (!token || !currentUser.id) {\n      history.push('/login');\n   }\n\n   if (!fetched) {\n      return null;\n   }\n\n   const isAdmin = () => {\n      return (\n         bookclubUsers.bookclub.bookclub_users[0].is_admin === currentUser.id\n      );\n   };\n\n   const isMember = () => {\n      let temp = bookclub.users.filter(user => {\n         return user.id === currentUser.id;\n      });\n      if (temp.length > 0) {\n         return true;\n      }\n      return false;\n   };\n\n   const { name, description, picture } = bookclub;\n\n   return (\n      <div>\n         <div className={classes.root}>\n            <h1>{name}</h1>\n            {isAdmin() ? <AdminOptions /> : <MemberOptions />}\n            <img src={picture} alt=\"bookclub\" className={classes.image} />\n            <h1>Members</h1>\n            <AvatarGroup>\n               {users.map(user => {\n                  return (\n                     <Tooltip title={user.username}>\n                        <Avatar\n                           alt={user.username}\n                           src={user.profile_picture}\n                           key={user.id}\n                        />\n                     </Tooltip>\n                  );\n               })}\n            </AvatarGroup>\n            <p>{description}</p>\n            {poll && isMember() ? <PollShow /> : null}\n         </div>\n         <BookModal />\n      </div>\n   );\n};\n\nexport default BookClubShow;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { CREATE_POLL as createPoll } from '../actions/poll';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\n\nconst CreatePoll = () => {\n   const bookclub = useSelector(state => state.bookclub.bookclub);\n   const [title, setTitle] = useState('');\n   const dispatch = useDispatch();\n   const history = useHistory();\n\n   const handleChange = event => {\n      setTitle(event.target.value);\n   };\n\n   const handleSubmit = event => {\n      event.preventDefault();\n      fetch(\n         `https://bookclub-builder-server.herokuapp.com/api/v1/polls`,\n         {\n            method: 'POST',\n            headers: {\n               'Content-Type': 'application/json',\n               Accepts: 'application/json',\n            },\n            body: JSON.stringify({\n               name: title,\n               bookclub_id: bookclub.id,\n            }),\n         },\n      )\n         .then(response => response.json())\n         .then(data => {\n            dispatch(createPoll(data));\n            history.push(`/bookclubs/${bookclub.id}/${data.id}/options`);\n         });\n   };\n\n   return (\n      <div>\n         <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n         >\n            <h1>Create Poll for {bookclub.name}</h1>\n            <form onSubmit={handleSubmit}>\n               <Box>\n                  <TextField\n                     autoComplete=\"off\"\n                     required\n                     id=\"title\"\n                     label=\"Title\"\n                     value={title}\n                     onChange={handleChange}\n                     variant=\"filled\"\n                     style={{ marginTop: '5px', marginBottom: '5px' }}\n                  />\n               </Box>\n               <Box>\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                     Submit\n                  </Button>\n               </Box>\n            </form>\n         </Box>\n      </div>\n   );\n};\n\nexport default CreatePoll;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport S3FileUpload from 'react-s3';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CURRENT_BOOKCLUB as currentBookclub } from '../actions/bookclub';\n\nconst EditBookClub = () => {\n   const bookclubId = useSelector(state => state.bookclub.bookclub.id);\n   const history = useHistory();\n   const dispatch = useDispatch();\n\n   const [picture, setPicture] = useState(\n      useSelector(state => state.bookclub.bookclub.picture),\n   );\n   const [name, setName] = useState(\n      useSelector(state => state.bookclub.bookclub.name),\n   );\n   const [description, setDescription] = useState(\n      useSelector(state => state.bookclub.bookclub.description),\n   );\n\n   const useStyles = makeStyles(theme => ({\n      input: {\n         display: 'none',\n      },\n      margin: {\n         margin: '5px',\n      },\n      image: {\n         height: '50%',\n         width: '50%',\n      },\n   }));\n\n   const classes = useStyles();\n\n   const config = {\n      bucketName: 'bookclub-photos',\n      region: 'us-west-2',\n      accessKeyId: process.env.REACT_APP_BOOKCLUB_ACCESS_KEY_ID,\n      secretAccessKey: process.env.REACT_APP_BOOKCLUB_SECRET_ACCESS_KEY,\n   };\n\n   const upload = e => {\n      S3FileUpload.uploadFile(e.target.files[0], config)\n         .then(data => {\n            setPicture(data.location);\n         })\n         .catch(error => {\n            alert(error);\n         });\n   };\n\n   const handleNameChange = event => {\n      setName(event.target.value);\n   };\n\n   const handleDescriptionChange = event => {\n      setDescription(event.target.value);\n   };\n\n   const handleSubmit = event => {\n      event.preventDefault();\n      fetch(\n         `https://bookclub-builder-server.herokuapp.com/api/v1/bookclubs/${bookclubId}`,\n         {\n            method: 'PATCH',\n            headers: {\n               'Content-Type': 'application/json',\n               Accepts: 'application/json',\n            },\n            body: JSON.stringify({\n               name,\n               picture,\n               description,\n            }),\n         },\n      )\n         .then(response => response.json())\n         .then(data => {\n            console.log(data);\n            dispatch(currentBookclub(data));\n            //need to update redux store but data is undefined for some reason\n            history.push(`/bookclubs/${bookclubId}`);\n         });\n   };\n\n   return (\n      <div>\n         <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            marginTop=\"5px\"\n         >\n            <form onSubmit={handleSubmit}>\n               <Box display=\"flex\" justifyContent=\"center\">\n                  <Box className={classes.margin}>\n                     <TextField\n                        required\n                        id=\"name\"\n                        label=\"Name\"\n                        value={name}\n                        onChange={handleNameChange}\n                        variant=\"filled\"\n                     />\n                  </Box>\n                  <Box className={classes.margin}>\n                     <TextField\n                        required\n                        id=\"description\"\n                        label=\"Description\"\n                        value={description}\n                        onChange={handleDescriptionChange}\n                        variant=\"filled\"\n                     />\n                  </Box>\n               </Box>\n               <Box display=\"flex\" justifyContent=\"center\">\n                  <img\n                     src={picture}\n                     alt=\"bookclub\"\n                     style={{ maxHeight: '100vh', maxWidth: '100vh' }}\n                  />\n               </Box>\n               <Box display=\"flex\" justifyContent=\"center\">\n                  <Box className={classes.margin}>\n                     <input\n                        className={classes.input}\n                        accept=\"image/*\"\n                        id=\"contained-button-file\"\n                        multiple\n                        type=\"file\"\n                        onChange={upload}\n                     />\n                     <label htmlFor=\"contained-button-file\">\n                        <Button\n                           variant=\"contained\"\n                           color=\"primary\"\n                           component=\"span\"\n                           startIcon={<CloudUploadIcon />}\n                        >\n                           Upload\n                        </Button>\n                     </label>\n                  </Box>\n                  <Box className={classes.margin}>\n                     <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                        Submit\n                     </Button>\n                  </Box>\n               </Box>\n            </form>\n         </Box>\n      </div>\n   );\n};\n\nexport default EditBookClub;\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport { useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { SIGN_OUT as signOut } from '../actions/auth';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst NavBar = () => {\n   const currentUser = useSelector(state => state.auth.user.id);\n   const history = useHistory();\n   const dispatch = useDispatch();\n\n   const useStyles = makeStyles(theme => ({\n      root: {\n         '& > *': {\n            margin: theme.spacing(1),\n         },\n      },\n      links: {\n         color: 'white',\n         textDecoration: 'none',\n      },\n   }));\n\n   const classes = useStyles();\n\n   const handleLogout = () => {\n      dispatch(signOut());\n      history.push('/login');\n   };\n\n   return (\n      <div>\n         {currentUser ? (\n            <AppBar position=\"static\">\n               <Toolbar>\n                  <Link to=\"/\" className={classes.links}>\n                     <Button color=\"inherit\">Home</Button>\n                  </Link>\n                  <Link\n                     to={`/${currentUser}/bookclubs`}\n                     className={classes.links}\n                  >\n                     <Button color=\"inherit\">My Bookclubs</Button>\n                  </Link>\n                  <Link to=\"/bookclubs\" className={classes.links}>\n                     <Button color=\"inherit\">Create Bookclub</Button>\n                  </Link>\n                  <Button color=\"inherit\" onClick={handleLogout}>\n                     Logout\n                  </Button>\n               </Toolbar>\n            </AppBar>\n         ) : (\n            <AppBar position=\"static\">\n               <Toolbar>\n                  <Link to=\"/\" className={classes.links}>\n                     <Button color=\"inherit\">Home</Button>\n                  </Link>\n                  <Link to=\"/login\" className={classes.links}>\n                     <Button color=\"inherit\">Login</Button>\n                  </Link>\n               </Toolbar>\n            </AppBar>\n         )}\n      </div>\n   );\n};\n\nexport default NavBar;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport S3FileUpload from 'react-s3';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\n\nconst CreateBookClub = () => {\n   const currentUserId = useSelector(state => state.auth.user.id);\n   const history = useHistory();\n   const [picture, setPicture] = useState('https://i.imgur.com/WXw2KKe.jpg');\n   const [name, setName] = useState('');\n   const [description, setDescription] = useState('');\n\n   const config = {\n      bucketName: 'bookclub-photos',\n      region: 'us-west-2',\n      accessKeyId: process.env.REACT_APP_BOOKCLUB_ACCESS_KEY_ID,\n      secretAccessKey: process.env.REACT_APP_BOOKCLUB_SECRET_ACCESS_KEY,\n   };\n\n   const useStyles = makeStyles(theme => ({\n      input: {\n         display: 'none',\n      },\n      margin: {\n         margin: '5px',\n      },\n      image: {\n         height: '50%',\n         width: '50%',\n      },\n   }));\n\n   const classes = useStyles();\n\n   const upload = e => {\n      S3FileUpload.uploadFile(e.target.files[0], config)\n         .then(data => {\n            setPicture(data.location);\n         })\n         .catch(error => {\n            alert(error);\n         });\n   };\n\n   const handleNameChange = event => {\n      setName(event.target.value);\n   };\n\n   const handleDescriptionChange = event => {\n      setDescription(event.target.value);\n   };\n\n   const handleSubmit = event => {\n      event.preventDefault();\n      fetch(\n         `https://bookclub-builder-server.herokuapp.com/api/v1/bookclubs`,\n         {\n            method: 'POST',\n            headers: {\n               'Content-Type': 'application/json',\n               Accepts: 'application/json',\n            },\n            body: JSON.stringify({\n               name,\n               picture,\n               description,\n               id: currentUserId,\n            }),\n         },\n      )\n         .then(response => response.json())\n         .then(data => {\n            history.push('/');\n         });\n   };\n\n   return (\n      <div>\n         <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            marginTop=\"5px\"\n         >\n            <h1>Create Bookclub</h1>\n            <form onSubmit={handleSubmit}>\n               <Box display=\"flex\" justifyContent=\"center\">\n                  <Box className={classes.margin}>\n                     <TextField\n                        required\n                        id=\"name\"\n                        label=\"Name\"\n                        value={name}\n                        onChange={handleNameChange}\n                        variant=\"filled\"\n                     />\n                  </Box>\n                  <Box className={classes.margin}>\n                     <TextField\n                        required\n                        id=\"description\"\n                        label=\"Description\"\n                        value={description}\n                        onChange={handleDescriptionChange}\n                        variant=\"filled\"\n                     />\n                  </Box>\n               </Box>\n               <Box\n                  display=\"flex\"\n                  justifyContent=\"center\"\n                  className={classes.margin}\n               >\n                  <img\n                     src={picture}\n                     alt=\"bookclub\"\n                     style={{ maxHeight: '100vh', maxWidth: '100vh' }}\n                  />\n               </Box>\n               <Box display=\"flex\" justifyContent=\"center\">\n                  <Box className={classes.margin}>\n                     <input\n                        className={classes.input}\n                        accept=\"image/*\"\n                        id=\"contained-button-file\"\n                        multiple\n                        type=\"file\"\n                        onChange={upload}\n                     />\n                     <label htmlFor=\"contained-button-file\">\n                        <Button\n                           variant=\"contained\"\n                           color=\"primary\"\n                           component=\"span\"\n                           startIcon={<CloudUploadIcon />}\n                        >\n                           Upload\n                        </Button>\n                     </label>\n                  </Box>\n                  <Box className={classes.margin}>\n                     <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                        Submit\n                     </Button>\n                  </Box>\n               </Box>\n            </form>\n         </Box>\n      </div>\n   );\n};\n\nexport default CreateBookClub;\n","import React from 'react';\nimport { api } from '../services/api';\nimport { useSelector } from 'react-redux';\nimport BookClubCard from './BookClubCard';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst MyBookClubs = () => {\n   const currentUserId = useSelector(state => state.auth.user.id);\n   const [mybookclubs, fetched] = api.useNetworkResource(\n      `https://bookclub-builder-server.herokuapp.com/api/v1/${currentUserId}/bookclubs`,\n   );\n\n   const token = localStorage.getItem('token');\n   const history = useHistory();\n\n   const useStyles = makeStyles({\n      root: {\n         display: 'flex',\n         flexWrap: 'wrap',\n         justifyContent: 'center',\n         alignContent: 'center',\n         height: '100%',\n      },\n   });\n\n   const classes = useStyles();\n\n   if (!token) {\n      history.push('/login');\n   }\n\n   if (!fetched) {\n      return null;\n   }\n\n   return (\n      <div>\n         <h1>MyBookClubs</h1>\n         <div className={classes.root}>\n            {mybookclubs.map(bookclub => (\n               <BookClubCard key={bookclub.id} bookclub={bookclub} />\n            ))}\n         </div>\n      </div>\n   );\n};\n\nexport default MyBookClubs;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CREATE_OPTION as createOption } from '../actions/poll';\n\nconst PollOptionShow = props => {\n   const poll = useSelector(state => state.poll.poll);\n   const dispatch = useDispatch();\n\n   const useStyles = makeStyles({\n      card: {\n         minWidth: '30%',\n         maxWidth: '30%',\n         margin: 10,\n      },\n      media: {\n         height: 345,\n         width: '100%',\n         objectFit: 'contain',\n      },\n   });\n\n   const classes = useStyles();\n\n   const handleClick = () => {\n      fetch(`https://bookclub-builder-server.herokuapp.com/api/v1/polls/${poll.id}/options`, {\n         method: 'POST',\n         headers: {\n            'Content-Type': 'application/json',\n            Accepts: 'application/json',\n         },\n         body: JSON.stringify({\n            google_book_id: props.option.id,\n            poll_id: poll.id,\n            votes: 0,\n         }),\n      })\n         .then(response => response.json())\n         .then(data => {\n            dispatch(createOption(props.option));\n            props.notify(`${props.option.volumeInfo.title}`);\n         });\n   };\n\n   return (\n      <Card className={classes.card}>\n         <CardActionArea onClick={handleClick} className={classes.action}>\n            <CardMedia\n               className={classes.media}\n               component=\"img\"\n               alt={`${props.option.volumeInfo.title} book`}\n               height=\"140\"\n               image={props.option.volumeInfo.imageLinks.smallThumbnail}\n               title={props.option.volumeInfo.title}\n            />\n            <CardContent>\n               <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {props.option.volumeInfo.title}\n               </Typography>\n               <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  {props.option.volumeInfo.description}\n               </Typography>\n            </CardContent>\n         </CardActionArea>\n      </Card>\n   );\n};\n\nexport default PollOptionShow;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport PollOptionShow from './PollOptionShow';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Box from '@material-ui/core/Box';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ToastContainer, toast, Slide } from 'react-toastify';\n// import { Slide, Zoom, Flip, Bounce } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.minimal.css';\nimport '../toast.css';\n\nconst PollOptions = () => {\n   const poll = useSelector(state => state.poll.poll);\n   const [options, setOptions] = useState([]);\n   const [select, setSelect] = useState('inauthor');\n   const [search, setSearch] = useState('');\n\n   const useStyles = makeStyles({\n      root: {\n         display: 'flex',\n         flexWrap: 'wrap',\n         justifyContent: 'center',\n         alignContent: 'center',\n         height: '100%',\n      },\n      card: {\n         minWidth: '30%',\n         maxWidth: '30%',\n         margin: 10,\n      },\n      media: {\n         height: 345,\n         width: '100%',\n         objectFit: 'cover',\n      },\n   });\n\n   const classes = useStyles();\n\n   const handleSubmit = event => {\n      event.preventDefault();\n      fetch(\n         `https://www.googleapis.com/books/v1/volumes?q=${select}:${search}&maxResults=6&key=AIzaSyA39gVxErny8CXc27ySrZefMllAWF_det4`,\n      )\n         .then(response => response.json())\n         .then(data => {\n            setOptions(data.items);\n         });\n   };\n\n   const handleSearchChange = event => {\n      setSearch(event.target.value);\n   };\n\n   const handleSelectChange = event => {\n      setSelect(event.target.value);\n   };\n\n   const notify = bookTitle => {\n      toast.success(`Added ${bookTitle} to poll options`);\n   };\n\n   return (\n      <div>\n         <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n         >\n            <h1>{poll.name}</h1>\n            <form onSubmit={handleSubmit}>\n               <Box>\n                  <TextField\n                     autoComplete=\"off\"\n                     id=\"search\"\n                     label=\"Search\"\n                     value={search}\n                     onChange={handleSearchChange}\n                     InputProps={{\n                        startAdornment: (\n                           <InputAdornment position=\"start\">\n                              <SearchIcon />\n                           </InputAdornment>\n                        ),\n                     }}\n                  />\n               </Box>\n               <Box>\n                  <FormControl variant=\"filled\" style={{ width: '100%' }}>\n                     <Select\n                        labelId=\"Search\"\n                        id=\"search\"\n                        onChange={handleSelectChange}\n                        autoWidth={true}\n                     >\n                        <MenuItem value=\"\">\n                           <em>None</em>\n                        </MenuItem>\n                        <MenuItem value=\"inauthor\">Author</MenuItem>\n                        <MenuItem value=\"intitle\">Title</MenuItem>\n                     </Select>\n                  </FormControl>\n               </Box>\n               <Box>\n                  <Button\n                     type=\"submit\"\n                     variant=\"contained\"\n                     color=\"primary\"\n                     style={{ marginTop: '5px' }}\n                  >\n                     Submit\n                  </Button>\n               </Box>\n            </form>\n         </Box>\n         <ToastContainer autoClose={8000} transition={Slide} />\n         <div className={classes.root}>\n            {options.map(option => (\n               <PollOptionShow\n                  key={option.id}\n                  option={option}\n                  searchId={option.id}\n                  notify={notify}\n               />\n            ))}\n         </div>\n      </div>\n   );\n};\n\nexport default PollOptions;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Home from './Home';\nimport Login from './Login';\nimport SignUp from './SignUp';\nimport BookClubShow from './BookClubShow';\nimport CreatePoll from './CreatePoll';\nimport EditBookClub from './EditBookClub';\nimport NavBar from './NavBar';\nimport CreateBookClub from './CreateBookClub';\nimport MyBookClub from './MyBookClubs';\nimport PollOptions from './PollOptions';\n\nconst MainContainer = props => {\n   return (\n      <div>\n         <NavBar />\n         <Route exact path=\"/\" render={() => <Home />} />\n         <Route\n            exact\n            path=\"/login\"\n            render={routerProps => <Login {...routerProps} />}\n         />\n         <Route\n            exact\n            path=\"/signup\"\n            render={routerProps => <SignUp {...routerProps} />}\n         />\n         <Route\n            exact\n            path=\"/bookclubs/:id\"\n            render={routerProps => <BookClubShow {...routerProps} />}\n         />\n         <Route\n            exact\n            path=\"/bookclubs/:id/poll\"\n            render={routerProps => <CreatePoll {...routerProps} />}\n         />\n         <Route\n            exact\n            path=\"/bookclubs/:id/:poll_id/options\"\n            render={routerProps => <PollOptions {...routerProps} />}\n         />\n         <Route\n            exact\n            path=\"/bookclubs/:id/edit\"\n            render={routerProps => <EditBookClub {...routerProps} />}\n         />\n         <Route\n            exact\n            path=\"/bookclubs\"\n            render={routerProps => <CreateBookClub {...routerProps} />}\n         />\n         <Route\n            exact\n            path=\"/:id/bookclubs\"\n            render={routerProps => <MyBookClub {...routerProps} />}\n         />\n      </div>\n   );\n};\n\nexport default MainContainer;\n","import React from 'react';\nimport MainContainer from './components/MainContainer';\nimport { HashRouter } from 'react-router-dom';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport './index.css';\n\nconst theme = createMuiTheme({\n   typography: {\n      fontFamily: [\n         'Playfair Display',\n         'Roboto',\n         '\"Helvetica Neue\"',\n         'Arial',\n         'sans-serif',\n      ].join(','),\n   },\n});\n\nfunction App() {\n   return (\n      <ThemeProvider theme={theme}>\n         <HashRouter basename=\"/\">\n            <MainContainer />\n         </HashRouter>\n      </ThemeProvider>\n   );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport auth from './auth';\nimport bookclub from './bookclub';\nimport poll from './poll';\nimport book from './book';\nimport modal from './modal';\n\nconst rootReducer = combineReducers({\n   auth,\n   bookclub,\n   poll,\n   book,\n   modal,\n});\n\nexport default rootReducer;\n","export default (state = { user: {} }, action) => {\n   switch (action.type) {\n      case 'SIGN_IN':\n         return {\n            ...state,\n            user: action.user,\n         };\n      case 'SIGN_OUT':\n         return {\n            ...state,\n            user: {},\n         };\n      default:\n         return state;\n   }\n};\n","export default (state = {}, action) => {\n   switch (action.type) {\n      case 'CURRENT_BOOKCLUB':\n         return {\n            bookclub: action.bookclub,\n         };\n      case 'UPDATE_USER':\n         return {\n            ...state,\n            bookclub: {\n               ...state.bookclub,\n               users: action.users,\n            },\n         };\n      default:\n         return state;\n   }\n};\n","export default (state = { poll_options: [] }, action) => {\n   switch (action.type) {\n      case 'CREATE_POLL':\n         return {\n            poll: {\n               ...action.poll,\n               option: [],\n            },\n         };\n      case 'CREATE_OPTION':\n         return {\n            poll: {\n               ...state.poll,\n               option: [...state.poll.option, action.option],\n            },\n         };\n      case 'CURRENT_POLL':\n         return {\n            poll: action.poll,\n         };\n      case 'ARCHIVE_POLL':\n         return {\n            poll: { poll_options: [] },\n         };\n      default:\n         return state;\n   }\n};\n","export default (state = {}, action) => {\n   switch (action.type) {\n      case 'CURRENT_BOOK':\n         return {\n            book: action.book,\n         };\n      default:\n         return state;\n   }\n};\n","export default (state = { open: false }, action) => {\n   switch (action.type) {\n      case 'TOGGLE_MODAL_STATUS':\n         return {\n            open: action.open,\n         };\n      default:\n         return state;\n   }\n};\n","import { createStore } from 'redux';\nimport rootReducer from './reducers/index';\n\nconst store = createStore(\n   rootReducer,\n   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n   <Provider store={store}>\n      <App />\n   </Provider>,\n   document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.20cf9821.png\";"],"sourceRoot":""}